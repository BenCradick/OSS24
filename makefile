CC = gcc
CXX = g++
CFLAGS = -Wall -Wextra 
CXXFLAGS = -std=c++17
LDFLAGS = -lrt

OSS_SRC = oss.cpp
WORKER_SRC = worker.cpp
PCB_SRC = PCB.cpp
CLOCK_SRC = clock.cpp
MESSAGE_SRC = message.cpp


OSS_OBJ = $(OSS_SRC:.cpp=.o)
WORKER_OBJ = $(WORKER_SRC:.cpp=.o)
PCB_OBJ = $(PCB_SRC:.cpp=.o)
CLOCK_OBJ = $(CLOCK_SRC:.cpp=.o)
MESSAGE_OBJ = $(MESSAGE_SRC:.cpp=.o)


PCB_HEADERS = PCB.h
OSS_HEADERS = oss.h
WORKER_HEADERS = worker.h
CONSTANTS_HEADERS = constants.h
CLOCK_HEADERS = clock.h
MESSAGE_HEADERS = message.h
LOGGER_HEADERS = logger.h


OSS_EXECUTABLE = oss
WORKER_EXECUTABLE = worker

.PHONY: all
all: $(OSS_EXECUTABLE)  $(WORKER_EXECUTABLE)


$(OSS_EXECUTABLE): $(OSS_OBJ) $(PCB_OBJ) $(CLOCK_OBJ) $(MESSAGE_OBJ) 
	$(CXX) $(CFLAGS) $(CXXFLAGS)  -o $@ $^ $(LDFLAGS)

$(WORKER_EXECUTABLE): $(WORKER_OBJ) $(CLOCK_OBJ) $(MESSAGE_OBJ)
	$(CXX) $(CFLAGS) $(CXXFLAGS)  -o $@ $^ $(LDFLAGS)


# %.o: %.c $(OSS_HEADERS) $(USER_HEADERS) $(PCB_HEADERS) $(CONSTANTS_HEADERS) $(CLOCK_HEADERS)
# 	$(CC) $(CFLAGS) -c -o $@ $<

%.o: %.cpp  $(PCB_HEADERS) $(CONSTANTS_HEADERS) $(CLOCK_HEADERS) $(WORKER_HEADERS) $(MESSAGE_HEADERS) $(LOGGER_HEADERS)
	$(CXX) $(CFLAGS) $(CXXFLAGS)  -c -o $@ $< $(LDFLAGS)

.PHONY: clean
clean:
	rm -f $(OSS_OBJ)  $(OSS_EXECUTABLE)  $(WORKER_OBJ) $(WORKER_EXECUTABLE) $(PCB_OBJ) $(CLOCK_OBJ) $(MESSAGE_OBJ) *.txt
